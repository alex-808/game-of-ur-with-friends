{"version":3,"sources":["socket.ts","api.ts","imgs/face_black_24dp.svg","components/LandingPage.tsx","components/WaitingRoom.tsx","components/Token.tsx","components/PlayerStart.tsx","constants.ts","components/PlayerWins.tsx","components/PlayerScore.tsx","components/Tile.tsx","components/Board.tsx","components/NotificationPanel.tsx","components/LeaveButton.tsx","components/Game.tsx","components/View.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["socket","io","process","handleCreateNewGame","emit","handleJoinGame","roomID","handleTokenClick","playerID","token","handleTokenHover","handleRollDice","handleResetGame","handleLeaveGame","LandingPage","createNewGame","joinGame","children","useState","joinRoomID","setJoinRoomID","className","onClick","src","face","alt","bind","onChange","event","inputEl","target","value","console","log","WaitingRoom","Token","PlayerStart","player","onHover","id","onMouseEnter","onMouseLeave","tokens","filter","map","Math","random","PlayerWins","gameWinners","winCount","gameWinnersArr","forEach","winner","calcWinCount","PlayerScore","activePlayer","score","Tile","oc","type","index","highlightedTile","Board","tiles","tile","i","NotificationPanel","notification","gridPlacement","setClassName","notificationRef","useRef","useEffect","current","setTimeout","style","gridArea","LeaveButton","leaveGame","GameComponent","gameState","rollDice","resetGame","players","board","phase","rollVal","View","view","api","App","setGameState","setRoomID","setNotification","setHighlightedTile","on","ID","state","updateState","msg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6dffbfe.chunk.js","sourcesContent":["import io from 'socket.io-client'\nconst url = process.env.REACT_APP_SERVER_URL || 'http://localhost:3001'\nconst socket = io(url)\n\nexport { socket }\n","import { socket } from './socket'\n\nconst handleCreateNewGame = () => {\n  socket.emit('newGame')\n}\n\nconst handleJoinGame = (roomID: string) => {\n  socket.emit('joinGame', roomID)\n}\n\nconst handleTokenClick: handleTokenEvent = (playerID, token) => {\n  socket.emit('tokenClick', playerID, token)\n}\n\nconst handleTokenHover: handleTokenEvent = (playerID, token) => {\n  socket.emit('tokenHover', playerID, token)\n}\n\nconst handleRollDice = () => {\n  socket.emit('rollDice')\n}\n\nconst handleResetGame = () => {\n  socket.emit('reset')\n}\n\nconst handleLeaveGame = () => {\n  socket.emit('leaveGame')\n}\n\nexport {\n  socket,\n  handleCreateNewGame,\n  handleJoinGame,\n  handleTokenClick,\n  handleTokenHover,\n  handleRollDice,\n  handleResetGame,\n  handleLeaveGame,\n}\n","export default __webpack_public_path__ + \"static/media/face_black_24dp.286f1073.svg\";","import React, { useState } from 'react'\nimport face from '../imgs/face_black_24dp.svg'\n\ninterface Props {\n  createNewGame: () => void\n  joinGame: (roomID: string) => void\n}\n\nconst LandingPage: React.FC<Props> = ({\n  createNewGame,\n  joinGame,\n  children,\n}) => {\n  const [joinRoomID, setJoinRoomID] = useState('')\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const inputEl = event.target as HTMLInputElement\n    setJoinRoomID(inputEl.value)\n    console.log(inputEl.value)\n  }\n  return (\n    <>\n      <header className=\"landing-header centering drop-shadow\">\n        <div className=\"header-text\">Game of Ur (with friends)</div>\n      </header>\n      {children}\n      <div className=\"session-buttons\">\n        <div className=\"top-left\">\n          <button\n            className=\"landing-button new-game-btn drop-shadow\"\n            onClick={createNewGame}\n          >\n            New Game\n          </button>\n        </div>\n        <div className=\"top-right\">\n          <img className=\"face-img drop-shadow\" src={face} alt=\"logo\" />\n        </div>\n        <div className=\"bottom-left\">\n          <button\n            className=\"landing-button join-game-btn drop-shadow\"\n            onClick={joinGame.bind(null, joinRoomID)}\n          >\n            Join Game\n          </button>\n        </div>\n        <div className=\"bottom-right\">\n          <div className=\"input-bkground drop-shadow\">\n            <h2>ENTER GAME CODE:</h2>\n            <input\n              className=\"game-code-input\"\n              onChange={handleInputChange}\n            ></input>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport { LandingPage }\n","import React from 'react'\n\ninterface Props {\n  roomID: string\n}\n\nconst WaitingRoom: React.FC<Props> = ({ roomID, children }) => {\n  return (\n    <>\n      {children}\n      <div className=\"waiting-header\">Waiting for partner</div>\n      <span className=\"waiting-room\">\n        <div>Game code:</div>\n        <span className=\"roomID\">{roomID}</span>\n      </span>\n    </>\n  )\n}\n\nexport { WaitingRoom }\n","import React from 'react'\n\ninterface Props {\n  playerID: PlayerID\n}\n\nconst Token: React.FC<Props> = ({ playerID }) => {\n  return <div className={`player-${playerID}-token`}></div>\n}\n\nexport { Token }\n","import React from 'react'\nimport * as constants from '../constants'\nimport { Token } from './Token'\n\ninterface Props {\n  player: PlayerI\n  onClick: handleTokenEvent\n  onHover: handleTokenEvent\n}\n\nconst PlayerStart: React.FC<Props> = ({ player, onClick, onHover }) => {\n  console.log(player)\n  return (\n    <div\n      className={`player${player.id}Start`}\n      onClick={onClick.bind(null, player.id, constants.PLAYER_START)}\n      onMouseEnter={onHover.bind(null, player.id, constants.PLAYER_START)}\n      onMouseLeave={onHover.bind(null, null, null)}\n    >\n      {player.tokens\n        .filter(token => token === -1)\n        .map(token => (\n          <Token key={Math.random()} playerID={player.id} />\n        ))}\n    </div>\n  )\n}\n\nexport { PlayerStart }\n","const GOAL_TILE = 13\nconst ROSETTE_TILES = [3, 7, 11]\nconst PLAYER_START = -1\nconst MIDLANE_START = 4\nconst MIDLANE_END = 10\nexport { GOAL_TILE, ROSETTE_TILES, PLAYER_START, MIDLANE_START, MIDLANE_END }\n","import React from 'react'\n\ninterface Props {\n  player: PlayerI\n  gameWinners: number[]\n}\n\nconst PlayerWins: React.FC<Props> = ({ player, gameWinners }) => {\n  const calcWinCount = (playerID: number, gameWinnersArr: number[]) => {\n    let winCount = 0\n    gameWinnersArr.forEach(winner => {\n      if (winner === playerID) {\n        winCount++\n      }\n    })\n    return winCount\n  }\n\n  const winCount = calcWinCount(player.id!, gameWinners)\n\n  return <p className={`Player${player.id}Wins`}>Wins: {winCount}</p>\n}\n\nexport { PlayerWins }\n","import React from 'react'\nimport { PlayerWins } from './PlayerWins'\n\ninterface Props {\n  player: PlayerI\n  activePlayer: PlayerI | null\n  gameWinners: number[]\n}\n\nconst PlayerScore: React.FC<Props> = ({\n  player,\n  activePlayer,\n  gameWinners,\n}) => {\n  return (\n    <div\n      className={`player${player.id}Score\n      `}\n    >\n      <div className={`${player.id === activePlayer?.id ? 'active' : ''}`}>\n        {player.score}\n      </div>\n      <PlayerWins player={player} gameWinners={gameWinners} />\n    </div>\n  )\n}\n\nexport { PlayerScore }\n","import React from 'react'\nimport { Token } from './Token'\n\ninterface Props extends TileI {\n  index: number\n  handleTokenClick: handleTokenEvent\n  handleTokenHover: handleTokenEvent\n  highlightedTile: number | null\n}\n\n// what is the best way to temporarily highlight something only as long as it is hovered on? onMouseExit too?\n\nconst Tile: React.FC<Props> = ({\n  oc,\n  token,\n  type,\n  index,\n  handleTokenClick,\n  handleTokenHover,\n  highlightedTile,\n}) => {\n  let className = index === highlightedTile ? 'highlighted ' : ''\n\n  switch (type) {\n    case 'normal':\n      if (index % 2 === 0) {\n        className += 'tile-style-1'\n      } else {\n        className += 'tile-style-0'\n      }\n      break\n    case 'rosette':\n      className += 'rosette'\n      break\n    case 'goal':\n      className += 'goal'\n      break\n  }\n  return (\n    <div\n      className={`${className} centering`}\n      onClick={handleTokenClick.bind(null, oc, token)}\n      onMouseEnter={handleTokenHover.bind(null, oc, token)}\n      onMouseLeave={handleTokenHover.bind(null, null, null)}\n    >\n      {oc !== null ? <Token playerID={oc} /> : <div></div>}\n    </div>\n  )\n}\n\nexport { Tile }\n","import React from 'react'\nimport { Tile } from './Tile'\n\ninterface Props {\n  tiles: TileI[]\n  handleTokenClick: handleTokenEvent\n  handleTokenHover: handleTokenEvent\n  highlightedTile: number | null\n}\n\nconst Board: React.FC<Props> = ({\n  tiles,\n  handleTokenClick,\n  handleTokenHover,\n  highlightedTile,\n}) => {\n  console.log(highlightedTile)\n  return (\n    <div className=\"board\">\n      {tiles.map((tile, i) => (\n        <Tile\n          oc={tile.oc}\n          type={tile.type}\n          index={i}\n          token={tile.token}\n          key={i}\n          handleTokenClick={handleTokenClick}\n          handleTokenHover={handleTokenHover}\n          highlightedTile={highlightedTile}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport { Board }\n","import React, { useEffect, useRef } from 'react'\nimport { useState } from 'react'\n\ninterface Props {\n  notification: string\n  gridPlacement?: string\n}\n\nconst NotificationPanel: React.FC<Props> = ({\n  notification,\n  gridPlacement = 'top-center',\n}) => {\n  const [className, setClassName] = useState('notification-panel')\n  const notificationRef = useRef('')\n  useEffect(() => {\n    if (notification !== notificationRef.current) {\n      setClassName('notification-panel-active')\n      notificationRef.current = notification\n      setTimeout(() => {\n        setClassName('notification-panel')\n      }, 1000)\n    } else {\n      setClassName('notification-panel')\n    }\n  }, [notification])\n  return (\n    <div\n      className={`${className} centering`}\n      style={{ gridArea: `${gridPlacement}` }}\n    >\n      {notification}\n    </div>\n  )\n}\n\nexport { NotificationPanel }\n","import React from 'react'\n\ninterface Props {\n  leaveGame: () => void\n}\n\nconst LeaveButton: React.FC<Props> = ({ leaveGame }) => {\n  return (\n    <div className=\"centering\">\n      <button className=\"button centering\" onClick={leaveGame}>\n        <span className=\"material-icons leave-icon\">logout</span>\n        Leave Room\n      </button>\n    </div>\n  )\n}\n\nexport { LeaveButton }\n","import React from 'react'\nimport { PlayerStart } from './PlayerStart'\nimport { PlayerScore } from './PlayerScore'\nimport { Board } from './Board'\nimport { NotificationPanel } from './NotificationPanel'\nimport { LeaveButton } from './LeaveButton'\n\ninterface Props {\n  gameState: GameI | null\n  handleTokenClick: handleTokenEvent\n  handleTokenHover: handleTokenEvent\n  highlightedTile: number | null\n  rollDice: () => void\n  resetGame: () => void\n  notification: string\n  leaveGame: () => void\n}\n\nconst GameComponent: React.FC<Props> = ({\n  gameState,\n  handleTokenClick,\n  handleTokenHover,\n  highlightedTile,\n  rollDice,\n  resetGame,\n  notification,\n  leaveGame,\n}) => {\n  if (!gameState) return <div>Error: No State</div>\n  return (\n    <>\n      <LeaveButton leaveGame={leaveGame} />\n      <PlayerStart\n        player={gameState.players[0]}\n        onClick={handleTokenClick}\n        onHover={handleTokenHover}\n      />\n      <PlayerScore\n        activePlayer={gameState.activePlayer}\n        player={gameState.players[0]}\n        gameWinners={gameState.gameWinners}\n      />\n      <NotificationPanel notification={notification} />\n      <Board\n        tiles={gameState.board}\n        handleTokenClick={handleTokenClick}\n        handleTokenHover={handleTokenHover}\n        highlightedTile={highlightedTile}\n      />\n      <div className=\"game-buttons\">\n        <button\n          className={\n            gameState.phase !== 'gameOver' ? 'game-button' : 'invisible'\n          }\n          onClick={rollDice}\n        >\n          {gameState.phase !== 'rolling' ? gameState.rollVal : 'Roll'}\n        </button>\n        <button\n          className={\n            gameState.phase !== 'gameOver' ? 'invisible' : 'game-button'\n          }\n          onClick={resetGame}\n        >\n          New Game\n        </button>\n      </div>\n\n      <PlayerStart\n        player={gameState.players[1]}\n        onClick={handleTokenClick}\n        onHover={handleTokenHover}\n      />\n      <PlayerScore\n        activePlayer={gameState.activePlayer}\n        player={gameState.players[1]}\n        gameWinners={gameState.gameWinners}\n      />\n    </>\n  )\n}\nexport { GameComponent }\n","import React from 'react'\nimport * as api from '../api'\nimport { LandingPage } from './LandingPage'\nimport { WaitingRoom } from './WaitingRoom'\nimport { GameComponent } from './Game'\nimport { NotificationPanel } from './NotificationPanel'\nimport { LeaveButton } from './LeaveButton'\n\ninterface Props {\n  gameState: GameI | null\n  roomID: string | null\n  notification: string\n  highlightedTile: number | null\n}\n\nconst View: React.FC<Props> = ({\n  gameState,\n  roomID,\n  notification,\n  highlightedTile,\n}) => {\n  let view\n  if (!gameState && !roomID) {\n    view = (\n      <LandingPage\n        createNewGame={api.handleCreateNewGame}\n        joinGame={api.handleJoinGame}\n      >\n        <NotificationPanel\n          notification={notification}\n          gridPlacement={'bottom-center'}\n        />\n      </LandingPage>\n    )\n  } else if (!gameState && roomID) {\n    view = (\n      <WaitingRoom roomID={roomID}>\n        <LeaveButton leaveGame={api.handleLeaveGame} />\n        <NotificationPanel notification={notification} />\n      </WaitingRoom>\n    )\n  } else if (gameState && roomID) {\n    view = (\n      <GameComponent\n        notification={notification}\n        gameState={gameState}\n        handleTokenClick={api.handleTokenClick}\n        handleTokenHover={api.handleTokenHover}\n        highlightedTile={highlightedTile}\n        rollDice={api.handleRollDice}\n        resetGame={api.handleResetGame}\n        leaveGame={api.handleLeaveGame}\n      />\n    )\n  }\n  return <>{view}</>\n}\n\nexport { View }\n","import React, { useState, useEffect } from 'react'\nimport * as api from './api'\nimport './App.scss'\nimport { View } from './components/View'\n\nfunction App() {\n  const [gameState, setGameState] = useState<GameI | null>(null)\n  const [roomID, setRoomID] = useState('')\n  const [notification, setNotification] = useState('')\n  const [highlightedTile, setHighlightedTile] = useState<number | null>(null)\n\n  useEffect(() => {\n    api.socket.on('roomID', (ID: string) => {\n      setRoomID(ID)\n    })\n\n    api.socket.on('init', (state: GameI) => {\n      updateState(state)\n    })\n\n    api.socket.on('updateState', (state: GameI) => {\n      console.log(state)\n      updateState(state)\n    })\n\n    api.socket.on('notification', ({ msg }) => {\n      setNotification(msg)\n    })\n\n    api.socket.on('tileHighlight', tile => {\n      setHighlightedTile(tile)\n    })\n  }, [])\n\n  const updateState = (state: GameI) => {\n    setGameState(state)\n    setHighlightedTile(null)\n  }\n\n  return (\n    <div className=\"App\">\n      <View\n        gameState={gameState}\n        roomID={roomID}\n        notification={notification}\n        highlightedTile={highlightedTile}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}